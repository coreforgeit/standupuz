services:
  db:
    image: postgis/postgis
    container_name: db_uz
    ports:
      - "5432:5432"
    volumes:
      - ../data:/var/lib/postgresql/data
    restart: unless-stopped
    env_file:
      - ../docker/.env


  pgadmin:
    image: elestio/pgadmin
    container_name: pgadmin_uz
    volumes:
      - pgadmin_data:/var/lib/pgadmin
      - ../pgadmin_scv:/var/lib/pgadmin/imports
    ports:
      - "8080:80"
    restart: unless-stopped
    env_file:
      - ../docker/.env

  redis:
    image: redis:latest
    container_name: redis_uz
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data

#  nginx:
#    image: nginx:latest
#    container_name: nginx_uz
#    ports:
#      - "80:80"
#      - "443:443"
#    volumes:
#      - ../nginx/nginx.conf:/etc/nginx/nginx.conf
#      - ../nginx/conf.d/base.conf:/etc/nginx/conf.d/base.conf
#      - ../logs/nginx:/var/log/nginx
#      - /etc/letsencrypt:/etc/letsencrypt
#      - static_value:/var/html/static/
#      - media_value:/var/html/media/
#    restart: unless-stopped
#    depends_on:
#      - api


  bot:
    build:
      context: ..
      dockerfile: docker/dockerfiles/DockerfileBot
      args:
        - --no-cache
    container_name: bot_uz
    volumes:
      - ../bot:/app
      - ../logs/bot:/app/logs
      - ../photo:/app/data/photo
    restart: unless-stopped
    depends_on:
      - db
    env_file:
      - .env

  api:
    build:
      context: ..
      dockerfile: docker/dockerfiles/DockerfileAdmin
      args:
        - --no-cache
    container_name: api_uz
    volumes:
      - ../standupuz_web:/app
#      - ../photo:/app/media
      - ../logs/django:/app/logs

    restart: unless-stopped
    ports:
      - "8000:8000"
    depends_on:
      - db
    env_file:
      - .env

#  spot-front:
#    build:
#      context: ..
#      dockerfile: /docker/dockerfiles/DockerfileSpot
#      args:
#        - --no-cache
#    container_name: spot-front_uz
#    volumes:
#      - ../spot:/app
#      - ../spot/node_modules:/app/node_modules
#      - ../photo:/app/public/site/photo

##    expose:
##      - "80"
#    ports:
#      - "3000:3000"
#    restart: unless-stopped
#    depends_on:
#      - api

volumes:
  pgadmin_data:
  postgres_data:
  redis_data:

