services:
  db:
    image: postgres:13
    container_name: db
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
    env_file:
      - ../docker/.env


  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
#    volumes:
#      - pgadmin_data:/var/lib/pgadmin
    ports:
      - "8080:80"
    restart: unless-stopped
    env_file:
      - ../docker/.env

  nginx:
    image: nginx:latest
    container_name: nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ../nginx/nginx.conf:/etc/nginx/nginx.conf
      - ../nginx/conf.d/base.conf:/etc/nginx/conf.d/base.conf
      - ../logs/nginx:/var/log/nginx
      - /etc/letsencrypt:/etc/letsencrypt
      - static_value:/var/html/static/
      - media_value:/var/html/media/
    restart: unless-stopped
    depends_on:
      - api


  bot:
    build:
      context: ..
      dockerfile: docker/dockerfiles/DockerfileBot
      args:
        - --no-cache
    container_name: bot
    volumes:
      - ../bot:/app
      - ../logs/bot:/app/logs
    restart: unless-stopped
    depends_on:
      - db
    env_file:
      - ../bot/.env

  api:
    build:
      context: ..
      dockerfile: docker/dockerfiles/DockerfileAdmin
      args:
        - --no-cache
    container_name: web
    volumes:
      - ../standupuz_web:/app
      - ../logs/django:/app/logs

    restart: unless-stopped
    ports:
      - "8000:8000"
    depends_on:
      - db
    env_file:
      - ../standupuz_web/.env

  spot-front:
    build:
      context: ..
      dockerfile: /docker/dockerfiles/DockerfileSpot
      args:
        - --no-cache
    container_name: spot-front
    volumes:
      - ../spot:/app
    expose:
      - "80"
    restart: unless-stopped
    depends_on:
      - api

volumes:
  pgadmin_data:
  postgres_data:
  static_value:
  media_value:

